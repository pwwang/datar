import pytest  # noqa: F401

from datar.core.utils import NotImplementedByCurrentBackendError
from datar.forcats import (
    fct_anon,
    fct_c,
    fct_collapse,
    fct_count,
    fct_cross,
    fct_drop,
    fct_expand,
    fct_explicit_na,
    fct_infreq,
    fct_inorder,
    fct_inseq,
    fct_lump,
    fct_lump_lowfreq,
    fct_lump_min,
    fct_lump_n,
    fct_lump_prop,
    fct_match,
    fct_other,
    fct_recode,
    fct_relabel,
    fct_relevel,
    fct_reorder,
    fct_reorder2,
    fct_rev,
    fct_shift,
    fct_shuffle,
    fct_unify,
    fct_unique,
    first2,
    last2,
    lvls_expand,
    lvls_reorder,
    lvls_revalue,
    lvls_union,
)


@pytest.mark.parametrize("verb, data, args, kwargs", [
    (fct_anon, None, [], None),
    (fct_c, None, [], None),
    (fct_collapse, None, [], None),
    (fct_count, None, [], None),
    (fct_cross, None, [], None),
    (fct_drop, None, [], None),
    (fct_expand, None, [], None),
    (fct_explicit_na, None, [], None),
    (fct_infreq, None, [], None),
    (fct_inorder, None, [], None),
    (fct_inseq, None, [], None),
    (fct_lump, None, [], None),
    (fct_lump_lowfreq, None, [], None),
    (fct_lump_min, None, [1], None),
    (fct_lump_n, None, [1], None),
    (fct_lump_prop, None, [1], None),
    (fct_match, None, [1], None),
    (fct_other, None, [], None),
    (fct_recode, None, [], None),
    (fct_relabel, None, [1], None),
    (fct_relevel, None, [], None),
    (fct_reorder, None, [1], None),
    (fct_reorder2, None, [1], None),
    (fct_rev, None, [], None),
    (fct_shift, None, [], None),
    (fct_shuffle, None, [], None),
    (fct_unify, None, [], None),
    (fct_unique, None, [], None),
    (first2, None, [1], None),
    (last2, None, [1], None),
    (lvls_expand, None, [1], None),
    (lvls_reorder, None, [1], None),
    (lvls_revalue, None, [1], None),
    (lvls_union, None, [], None),
])
def test_default_impl(verb, data, args, kwargs):
    kwargs = kwargs or {}
    with pytest.raises(NotImplementedByCurrentBackendError):
        verb(data, *args, **kwargs)
