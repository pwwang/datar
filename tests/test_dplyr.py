import pytest

from datar.core.utils import NotImplementedByCurrentBackendError
from datar.dplyr import (
    across,
    add_count,
    add_tally,
    all_of,
    anti_join,
    any_of,
    arrange,
    between,
    bind_cols,
    bind_rows,
    c_across,
    case_when,
    coalesce,
    contains,
    count,
    cumall,
    cumany,
    cume_dist,
    cummean,
    cur_column,
    cur_data,
    cur_data_all,
    cur_group,
    cur_group_id,
    cur_group_rows,
    dense_rank,
    desc,
    distinct,
    ends_with,
    everything,
    filter_,
    first,
    full_join,
    glimpse,
    group_by,
    group_by_drop_default,
    group_cols,
    group_data,
    group_indices,
    group_keys,
    group_map,
    group_modify,
    group_rows,
    group_size,
    group_split,
    group_trim,
    group_vars,
    group_walk,
    if_all,
    if_any,
    if_else,
    inner_join,
    lag,
    last,
    last_col,
    lead,
    left_join,
    matches,
    min_rank,
    mutate,
    n,
    n_distinct,
    n_groups,
    na_if,
    near,
    nest_join,
    nth,
    ntile,
    num_range,
    order_by,
    percent_rank,
    pull,
    recode,
    recode_factor,
    relocate,
    rename,
    rename_with,
    right_join,
    row_number,
    rows_append,
    rows_delete,
    rows_insert,
    rows_patch,
    rows_update,
    rows_upsert,
    rowwise,
    select,
    semi_join,
    slice_,
    slice_head,
    slice_min,
    slice_sample,
    slice_tail,
    slice_max,
    starts_with,
    summarise,
    tally,
    transmute,
    ungroup,
    union_all,
    where,
    with_groups,
    with_order,
)


@pytest.mark.parametrize("verb, data, args, kwargs", [
    (add_count, None, [], None),
    (add_tally, None, [], None),
    (anti_join, None, [None], None),
    (arrange, None, [], None),
    (between, None, [1, 2], None),
    (bind_cols, None, [], None),
    (bind_rows, None, [], None),
    (case_when, None, [1], None),
    (coalesce, None, [], None),
    (count, None, [], None),
    (cumall, None, [], None),
    (cumany, None, [], None),
    (cume_dist, None, [], None),
    (cummean, None, [], None),
    (cur_column, None, [1], None),
    (dense_rank, None, [], None),
    (desc, None, [], None),
    (distinct, None, [], None),
    (filter_, None, [], None),
    (first, None, [], None),
    (full_join, None, [1], None),
    (glimpse, None, [], None),
    (group_by, None, [], None),
    (group_by_drop_default, None, [], None),
    (group_cols, None, [], None),
    (group_data, None, [], None),
    (group_indices, None, [], None),
    (group_keys, None, [], None),
    (group_map, None, [1], None),
    (group_modify, None, [1], None),
    (group_rows, None, [], None),
    (group_size, None, [], None),
    (group_split, None, [], None),
    (group_trim, None, [], None),
    (group_vars, None, [], None),
    (group_walk, None, [1], None),
    (if_else, None, [1, 2], None),
    (inner_join, None, [1], None),
    (lag, None, [], None),
    (last, None, [], None),
    (lead, None, [], None),
    (left_join, None, [1], None),
    (min_rank, None, [], None),
    (mutate, None, [], None),
    (n_distinct, None, [], None),
    (n_groups, None, [], None),
    (na_if, None, [1], None),
    (near, None, [1], None),
    (nest_join, None, [1], None),
    (nth, None, [1], None),
    (ntile, None, [], None),
    (num_range, None, [1], None),
    (order_by, None, [1], None),
    (percent_rank, None, [], None),
    (pull, None, [], None),
    (recode, None, [], None),
    (recode_factor, None, [], None),
    (relocate, None, [], None),
    (rename, None, [], None),
    (rename_with, None, [1], None),
    (right_join, None, [1], None),
    (row_number, None, [], None),
    (rows_append, None, [None], None),
    (rows_delete, None, [None], None),
    (rows_insert, None, [None], None),
    (rows_patch, None, [None], None),
    (rows_update, None, [None], None),
    (rows_upsert, None, [None], None),
    (rowwise, None, [], None),
    (select, None, [], None),
    (semi_join, None, [1], None),
    (slice_, None, [], None),
    (slice_head, None, [], None),
    (slice_min, None, [1], None),
    (slice_sample, None, [], None),
    (slice_tail, None, [], None),
    (slice_max, None, [1], None),
    (summarise, None, [], None),
    (tally, None, [], None),
    (transmute, None, [], None),
    (ungroup, None, [], None),
    (union_all, None, [1], None),
    (with_groups, None, [1, 2], None),
    (with_order, None, [1, 2], None),
])
def test_verb_not_implemented(verb, data, args, kwargs):
    kwargs = kwargs or {}
    with pytest.raises(NotImplementedByCurrentBackendError):
        verb(data, *args, **kwargs)


@pytest.mark.parametrize("verb, data, args, kwargs", [
    (across, None, [], None),
    (if_any, None, [], None),
    (if_all, None, [], None),
    (c_across, None, [], None),
    (cur_data, None, [], None),
    (n, None, [], None),
    (cur_data_all, None, [], None),
    (cur_group, None, [], None),
    (cur_group_id, None, [], None),
    (cur_group_rows, None, [], None),
    (where, None, [1], None),
    (everything, None, [], None),
    (last_col, None, [], None),
    (starts_with, None, [1], None),
    (ends_with, None, [1], None),
    (contains, None, [1], None),
    (matches, None, [1], None),
    (all_of, None, [1], None),
    (any_of, None, [1], None),
])
def test_dep_verbs(verb, data, args, kwargs):
    kwargs = kwargs or {}
    with pytest.raises(NotImplementedByCurrentBackendError):
        data >> verb(*args, **kwargs)
